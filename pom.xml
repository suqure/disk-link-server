<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>ltd.finelink.tool</groupId>
	<artifactId>link-disk</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-parent</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring.cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.alibaba.cloud</groupId>
				<artifactId>spring-cloud-alibaba-dependencies</artifactId>
				<version>${alibaba.cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>ltd.finelink.tool</groupId>
				<artifactId>disk-base</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>ltd.finelink.tool</groupId>
				<artifactId>disk-dao</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>ltd.finelink.tool</groupId>
				<artifactId>disk-client</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.squareup.okhttp3</groupId>
				<artifactId>okhttp</artifactId>
				<version>${okhttp.version}</version>
			</dependency>
			<dependency>
				<groupId>com.squareup.okhttp3</groupId>
				<artifactId>okhttp-sse</artifactId>
				<version>${okhttp.version}</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>${fastjson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba.csp</groupId>
				<artifactId>sentinel-datasource-nacos</artifactId>
				<version>1.8.2</version>
			</dependency>
			<dependency>
				<groupId>com.google.protobuf</groupId>
				<artifactId>protobuf-java</artifactId>
				<version>${protobuf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.lionsoul</groupId>
				<artifactId>ip2region</artifactId>
				<version>${ip2region.version}</version>
			</dependency>
			<dependency>
				<groupId>com.maxmind.geoip2</groupId>
				<artifactId>geoip2</artifactId>
				<version>${geoip2.version}</version>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-all</artifactId>
				<version>4.1.76.Final</version>
			</dependency>
			<dependency>
				<groupId>io.grpc</groupId>
				<artifactId>grpc-all</artifactId>
				<version>${grpc.version}</version>
			</dependency>
			<dependency>
				<groupId>io.grpc</groupId>
				<artifactId>grpc-netty</artifactId>
				<version>${grpc.version}</version>
			</dependency>
			<dependency>
				<groupId>io.grpc</groupId>
				<artifactId>grpc-protobuf</artifactId>
				<version>${grpc.version}</version>
			</dependency>
			<dependency>
				<groupId>io.grpc</groupId>
				<artifactId>grpc-stub</artifactId>
				<version>${grpc.version}</version>
			</dependency>
			<dependency>
				<groupId>io.grpc</groupId>
				<artifactId>grpc-core</artifactId>
				<version>${grpc.version}</version>
			</dependency>
			<dependency>
				<groupId>io.grpc</groupId>
				<artifactId>grpc-api</artifactId>
				<version>${grpc.version}</version>
			</dependency>
			<dependency>
				<groupId>com.googlecode.libphonenumber</groupId>
				<artifactId>libphonenumber</artifactId>
				<version>${libphone.version}</version>
			</dependency>
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql-connector.version}</version>
			</dependency>
			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>mybatis-plus-boot-starter</artifactId>
				<version>${mybatis-plus.version}</version>
			</dependency>
			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>mybatis-plus-generator</artifactId>
				<version>${mybatis-plus.version}</version>
			</dependency>
			<dependency>
				<groupId>org.dom4j</groupId>
				<artifactId>dom4j</artifactId>
				<version>${dom4j.version}</version>
			</dependency>
			<dependency>
				<groupId>com.github.ben-manes.caffeine</groupId>
				<artifactId>caffeine</artifactId>
				<version>${caffeine.version}</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid-spring-boot-starter</artifactId>
				<version>${druid.version}</version>
			</dependency>
			<dependency>
				<groupId>dev.onvoid.webrtc</groupId>
				<artifactId>webrtc-java</artifactId>
				<version>${webrtc.version}</version>
			</dependency>
			<dependency>
				<groupId>org.libtorrent4j</groupId>
				<artifactId>libtorrent4j</artifactId>
				<version>${libtorrent4j.version}</version>
			</dependency>
			<dependency>
				<groupId>com.github.gwenn</groupId>
				<artifactId>sqlite-dialect</artifactId>
				<version>${sqlite-dialect.version}</version>
			</dependency>
			<dependency>
				<groupId>de.roskenet</groupId>
				<artifactId>springboot-javafx-support</artifactId>
				<version>2.1.6</version>
			</dependency>
			<dependency>
				<groupId>org.xerial</groupId>
				<artifactId>sqlite-jdbc</artifactId>
				<version>${sqlite.version}</version>
			</dependency>
			<dependency>
			    <groupId>org.lionsoul</groupId>
			    <artifactId>ip2region</artifactId>
			    <version>${ip2region.version}</version>
			</dependency> 
			<dependency>
				<groupId>com.frostwire</groupId>
				<artifactId>jlibtorrent</artifactId>
				<version>${jlibtorrent.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<distributionManagement>
		<repository>
			<id>Releases</id>
			<name>User Project Release</name>
			<url>http://192.168.56.101:8081/repository/maven-releases/</url>
		</repository>

		<snapshotRepository>
			<id>Snapshots</id>
			<name>User Project SNAPSHOTS</name>
			<url>http://192.168.56.101:8081/repository/maven-snapshots/</url>
		</snapshotRepository>
	</distributionManagement>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<java.version>1.8</java.version>
		<spring-boot.version>2.3.12.RELEASE</spring-boot.version>
		<spring.cloud.version>Hoxton.SR12</spring.cloud.version>
		<alibaba.cloud.version>2.2.6.RELEASE</alibaba.cloud.version>
		<mybatis-plus.version>3.4.1</mybatis-plus.version>
		<fastjson.version>1.2.83</fastjson.version>
		<okhttp.version>4.9.3</okhttp.version>
		<aliyun-sdk-green.version>3.6.5</aliyun-sdk-green.version>
		<aliyun-sdk-core.version>4.1.1</aliyun-sdk-core.version>
		<protobuf.version>3.20.1</protobuf.version>
		<aliyun.log.version>0.1.18</aliyun.log.version>
		<redisson.version>3.14.1</redisson.version>
		<ip2region.version>1.7.2</ip2region.version>
		<geoip2.version>2.15.0</geoip2.version>
		<grpc.version>1.46.0</grpc.version>
		<libphone.version>8.12.49</libphone.version>
		<firebase.version>8.2.0</firebase.version>
		<pushy.version>0.15.1</pushy.version>
		<dom4j.version>2.1.4</dom4j.version>
		<caffeine.version>2.9.3</caffeine.version>
		<druid.version>1.1.10</druid.version>
		<sqlite.version>3.42.0.0</sqlite.version>
		<webrtc.version>0.7.0</webrtc.version>
		<libtorrent4j.version>2.1.0-30</libtorrent4j.version>
		<jlibtorrent.version>1.2.19.0</jlibtorrent.version>
		<sqlite-dialect.version>0.1.4</sqlite-dialect.version>
		<project.log>/var/log/</project.log>
		<docker.image>finedisk-image</docker.image>
		<docker.container>finedisk-app</docker.container>
		<docker.registry>harbor.finelink.ltd</docker.registry>
		<project.port>8080</project.port>
		<docker.host.port>8080</docker.host.port>
		<docker.host.log>/home/docker/logs/disk/</docker.host.log>
		<project.dir>/var/static/</project.dir>
		<docker.host.dir>/home/docker/static/disk/</docker.host.dir>
		<registry.project>library</registry.project>
		<registry.username>admin</registry.username>
		<registry.password>Harbor12345</registry.password>
		<mysql-connector.version>8.0.25</mysql-connector.version>
		<java.memory.limit>1024m</java.memory.limit>
	</properties>
	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<project.active>dev</project.active>
				<docker.memory.limit>1024m</docker.memory.limit>    
				<java.memory.limit>1024m</java.memory.limit>
			</properties>
		</profile>
		<profile>
			<id>test</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<project.active>test</project.active>  
				<docker.memory.limit>1024m</docker.memory.limit>
				<java.memory.limit>1024m</java.memory.limit>
			</properties>
		</profile>
		<profile>
			<id>pro</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<project.active>pro</project.active>  
				<docker.memory.limit>1024m</docker.memory.limit>
				<java.memory.limit>1024m</java.memory.limit>
			</properties>
		</profile>
	</profiles>
	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**</include>
				</includes>
			</resource>
		</resources>
		<plugins>
			<!-- Maven编译插件，非必须，打包后生成 xxx.jar -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>

			<!-- Java源代码插件，非必须，打包后生成 xxx-sources.jar -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Javadoc，文档插件，非必须，打包后生成 xxx-javadoc.jar -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<!-- Jdk1.8以后文档的生成校验非常严谨，这里可以关掉文档校验 -->
							<doclint>none</doclint>
							<applyJavadocSecurityFix>false</applyJavadocSecurityFix>
							<failOnError>false</failOnError>
							<failOnWarnings>false</failOnWarnings>
							<additionalJOption>-Xdoclint:none</additionalJOption>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>2.7.5</version>
					<executions>
						<execution>
							<goals>
								<goal>repackage</goal>
							</goals>
							<configuration>
								<mainClass>${start-class}</mainClass>
							</configuration>
						</execution>
					</executions>
					<configuration>
						<mainClass>${start-class}</mainClass>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<configuration>
						<nonFilteredFileExtensions>
							<nonFilteredFileExtension>xlsx</nonFilteredFileExtension>
							<nonFilteredFileExtension>xls</nonFilteredFileExtension>
							<nonFilteredFileExtension>zip</nonFilteredFileExtension>
							<nonFilteredFileExtension>cer</nonFilteredFileExtension>
							<nonFilteredFileExtension>pfx</nonFilteredFileExtension>
							<nonFilteredFileExtension>py</nonFilteredFileExtension>
							<nonFilteredFileExtension>keystore</nonFilteredFileExtension>
							<nonFilteredFileExtension>mmdb</nonFilteredFileExtension>
							<nonFilteredFileExtension>db</nonFilteredFileExtension>
						</nonFilteredFileExtensions>
					</configuration>
					<executions>
						<execution>
							<id>copy-resources</id>
							<!-- here the phase you need -->
							<phase>install</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory>target</outputDirectory>
								<resources>
									<resource>
										<directory>src/main/resources/docker</directory>
										<includes>
											<include>*</include>
										</includes>
										<filtering>true</filtering>
									</resource>
								</resources>
								<encoding>UTF-8</encoding>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<modules>
		<module>disk-server</module>
		<module>disk-base</module>
		<module>disk-dao</module>
		<module>disk-client</module>
		<module>disk-desktop</module>
	</modules>
</project>